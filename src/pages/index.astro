---
import MainLayout from "../layouts/MainLayout.astro";
import NavigationP from "../components/NavigationP.astro";
import CarrouselScroll from "../components/CarrouselScroll.astro";
import CategoryCard from "../components/CategoryCard.astro";
import Banner from "../components/Banner.astro";
import Footer from "../components/Footer.astro";
import AccentButton from "../components/AccentButton.astro";
import HeroVideo from "../components/HeroVideo.astro";
import Activitycard from "../components/Activitycard.astro";

const newsData = await fetch("https://cgymdqjrjdkshxuerdil.supabase.co/rest/v1/Nyheder_Aktiviteter?type=eq.Nyhed", {
  method: "GET",
  headers: {
    apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNneW1kcWpyamRrc2h4dWVyZGlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTUxNjg4NjYsImV4cCI6MjAzMDc0NDg2Nn0.Wuj2B0mSu9HRIludgvymMYSNlhDMzV8213Fitr6A4bw",
  },
}).then((response) => response.json());

const activityData = await fetch("https://cgymdqjrjdkshxuerdil.supabase.co/rest/v1/Nyheder_Aktiviteter?type=eq.Aktivitet", {
  method: "GET",
  headers: {
    apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNneW1kcWpyamRrc2h4dWVyZGlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTUxNjg4NjYsImV4cCI6MjAzMDc0NDg2Nn0.Wuj2B0mSu9HRIludgvymMYSNlhDMzV8213Fitr6A4bw",
  },
}).then((response) => response.json());
---

<MainLayout title="Arbejdernes Tennisklub" />
<NavigationP />
<HeroVideo />

<div class="main">
  <section class="content" id="fpMain">
    <h2>SENESTE NYT</h2>
    <div class="carousel-container">
      <div class="carousel-track">
        {
          newsData.map((news) => (
            <div class="carousel-item">
              <CarrouselScroll slug={news.slug} news_image={news.image} date={news.date} headline={news.headline} subheadline={news.subheadline} />
            </div>
          ))
        }
      </div>
      <div class="carousel-navigation">
        <img src="/img/svg/redarrowLeft_1.svg" id="prevButton" alt="rød pil venstre" />
        <img src="/img/svg/redarrowRight_1.svg" id="nextButton" alt="rød pil højre" />
      </div>

      <div class="carousel-indicators">
        {newsData.map((_, index) => <div class={`carousel-indicator ${index === 0 ? "active" : ""}`} data-slide-to={index} />)}
      </div>
    </div>
    <br />
    <br />
    <div class="flexboxCenter">
      <AccentButton btnText="SE ALLE NYHEDER" link="/allenyheder" />
    </div>

    <h3>KOMMENDE AKTIVITETER</h3>
    <article class="autolayout">
      {activityData.slice(0, 3).map((news) => <Activitycard slug={news.slug} news_image={news.image} date={news.date} headline={news.headline} subheadline={news.subheadline} />)}
    </article>
    <div class="flexboxCenter">
      <AccentButton btnText="SE ALLE AKTIVITETER" link="/aktiviteter" />
    </div>

    <br />
    <br />

    <div class="spacer">
      <article class="grid-2_2">
        <a href="/juniortraening"><CategoryCard imgPath="../img/juniorCategory.webp" title="JUNIOR" alt="Unge spillere giver highfive"/></a>
        <a href="/seniortraening"><CategoryCard imgPath="../img/seniorCategory.webp" title="SENIOR" alt="Seniorspillere klar til kamp"/></a>
        <a href="/motionisttraening"><CategoryCard imgPath="../img/motionist_træning_hero.webp" title="MOTIONIST" alt="Smilende motionister"/></a>
        <a href="/elitetraening"><CategoryCard imgPath="../img/elite_træning_hero.webp" title="ELITE" alt="Holdbillede"/></a>
      </article>
    </div>
  </section>
  <Banner src="bannerBg.png" btnTitle="TJEK MAKKERBØRS" />
</div>
<Footer />

<!-- -------------------------------------------------------- -->
<style>
  .carousel-track {
    display: flex;
    transition: transform 1s ease-in-out;
  }

  .carousel-container {
    width: 700px;
    display: flex;
    overflow: hidden;
    position: relative;
    margin: auto;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  .carousel-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }
  .carousel-item {
    flex: 0 0 100%;
  }
  .carousel-navigation {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 2;
  }
  .carousel-navigation img {
    background: rgba(255, 255, 255, 0.5);
    width: 50px;
    border: none;
    padding: 10px;
    cursor: pointer;
  }
  .carousel-indicators {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    z-index: 2;
  }
  .carousel-indicator {
    width: 10px;
    height: 10px;
    background-color: #ccc;
    border-radius: 50%;
    margin: 0 5px;
    cursor: pointer;
  }
  .carousel-indicator.active {
    background-color: #555;
  }

  @media only screen and (max-width: 1024px) {
    .carousel-container {
      width: 500px;
      height: 400px;
    }
  }

  @media only screen and (max-width: 768px) {
    .carousel-container {
      width: 240px;
      height: 400px;
    }
  }
</style>

<script>
  const track = document.querySelector<HTMLElement>(".carousel-track");
  const items = document.querySelectorAll<HTMLElement>(".carousel-item");
  const indicators = document.querySelectorAll<HTMLElement>(".carousel-indicator");

  // Check if the elements exist before accessing their properties
  if (track && items.length > 0) {
    const totalItems = items.length;
    const itemWidth = items[0].offsetWidth;

    let index = 0;

    function updateCarousel() {
      if (track) {
        track.style.transform = `translateX(-${index * itemWidth}px)`;
        updateIndicators();
      }
    }

    function nextSlide() {
      index = index < totalItems - 1 ? index + 1 : 0;
      updateCarousel();
    }

    function prevSlide() {
      index = index > 0 ? index - 1 : totalItems - 1;
      updateCarousel();
    }

    function goToSlide(idx: number) {
      index = idx;
      updateCarousel();
    }

    function updateIndicators() {
      indicators.forEach((indicator, idx) => {
        if (indicator) {
          if (idx === index) {
            indicator.classList.add("active");
          } else {
            indicator.classList.remove("active");
          }
        }
      });
    }

    const nextButton = document.getElementById("nextButton");
    const prevButton = document.getElementById("prevButton");

    // Check if the buttons exist before adding event listeners
    if (nextButton && prevButton) {
      nextButton.addEventListener("click", nextSlide);
      prevButton.addEventListener("click", prevSlide);
    }

    indicators.forEach((indicator) => {
      indicator.addEventListener("click", (event) => {
        const target = event.target as HTMLElement;
        const slideTo = target.getAttribute("data-slide-to");
        if (slideTo !== null) {
          goToSlide(parseInt(slideTo));
        }
      });
    });

    setInterval(nextSlide, 6000); // Auto slide every 6 seconds
  }
</script>
