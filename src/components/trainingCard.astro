---
const mondayW = Astro.props.mondayW;
const mondayS = Astro.props.mondayS;
const tuesdayW = Astro.props.tuesdayW;
const tuesdayS = Astro.props.tuesdayS;
const wednesdayW = Astro.props.wednesdayW;
const wednesdayS = Astro.props.wednesdayS;
const thursdayW = Astro.props.thursdayW;
const thursdayS = Astro.props.thursdayS;
const fridayW = Astro.props.fridayW;
const fridayS = Astro.props.fridayS;
const saturdayW = Astro.props.saturdayW;
const saturdayS = Astro.props.saturdayS;
const sundayW = Astro.props.sundayW;
const sundayS = Astro.props.sundayS;
const src = Astro.props.src;
const teamDescription = Astro.props.teamDescription;
const teamTitle = Astro.props.teamTitle;
const team1  = Astro.props.team1;
const team2 = Astro.props.team2;
const team3 = Astro.props.team3;
const trainingTeam1 = Astro.props.trainingTeam1;
const trainingTeam2 = Astro.props.trainingTeam2;
const trainingTeam3 = Astro.props.trainingTeam3;

---
<section class="trainingCard">
  <div class="trainingTitle">
      <h4>{teamTitle}</h4>
      <p>{teamDescription}</p>
  </div>
  <div class="trainingImg_container">
      <img src="/img/træning/${src}">
  </div>
  <table class="trainingTable">
      <thead>
        <tr>
          <th>Dag</th>
          <th>Vinter</th>
          <th>Sommer</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Mandag</td>
          <td>{mondayW}</td>
          <td>{mondayS}</td>
        </tr>
        <tr>
          <td>Tirsdag</td>
          <td>{tuesdayW}</td>
          <td>{tuesdayS}</td>
        </tr>
        <tr>
          <td>Onsdag</td>
          <td>{wednesdayW}</td>
          <td>{wednesdayS}</td>
        </tr>
        <tr>
          <td>Torsdag</td>
          <td>{thursdayW}</td>
          <td>{thursdayS}</td>
        </tr>
        <tr>
          <td>Fredag</td>
          <td>{fridayW}</td>
          <td>{fridayS}</td>
        </tr>
        <tr>
          <td>Lørdag</td>
          <td>{saturdayW}</td>
          <td>{saturdayS}</td>
        </tr>
        <tr>
          <td>Søndag</td>
          <td>{sundayW}</td>
          <td>{sundayS}</td>
        </tr>
      </tbody>
    </table>
    <div class="signUp">
      <div class="dropdown">
        <div class="dropbtn">
          <h5>TILMELD ET HOLD</h5>
          <img src="/img/svg/redarrowDown_1.svg" data-clicked-src="/img/svg/redarrowUp_1.svg" data-original-src="/img/svg/redarrowDown_1.svg" class="arrowIcon">
        </div>
        <div class="dropdown-menu" id="dropdown-menu">
          <a href={team1}>{trainingTeam1}</a>
          <a href={team2}>{trainingTeam2}</a>
          <a href={team3}>{trainingTeam3}</a>
        </div>
      </div>
    </div>
</section>


    <style>


.trainingCard {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: auto 1fr auto;
  width: 100%;
  margin-bottom: 5%;
  height: auto;
  position: relative;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.trainingTable, .signUp, .trainingTitle {
  margin: 1rem;
}

.trainingImg_container {
  grid-row: span 3;
  border-radius: 10px;
}

.trainingImg_container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 0px 10px 10px 0px;
}

table {
  border-collapse: collapse;
  font-size: 0.64rem;
  text-align: left;
  color: black;
}

th, td {
  padding: 10px
}

th {
  background-color: var(--primaryColor);
  color: rgb(255, 255, 255);
}

tr:nth-child(even) {
  background-color: #f3f3f3;
}

tr:nth-child(odd) {
  background-color: #ffffff;
}

/* signUp */

.dropdown-menu a:hover {
  background-color: var(--primaryColor);
  color: white;
}

.signUp {
  display: flex;
  justify-content: center;
}

.dropdown {
  position: relative;
  display: inline-block;
  margin-top: 2.5rem;
}

.dropbtn {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.8rem;
  text-align: center;
  padding: 2% 5rem;
  border: 2px solid var(--primaryColor);
  border-radius: 4px;
  white-space: nowrap;
}

.arrowIcon:hover {
  cursor: pointer;
}

.dropbtn h5 {
  color: var(--primaryColor);
}

.dropbtn img {
  height: 10px;
  margin-left: 50%;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-menu {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  width: 100%;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-menu a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

@media only screen and (max-width: 768px) {
  .trainingCard {
    grid-template-columns: 1fr;
    max-width: 375px;
  }

  .trainingImg_container {
    display: none;
  }

  h4 {
    font-size: 1.4rem;
  }

  p {
    font-size: 0.8rem;
  }
}
    @media only screen and (max-width: 768px) {
      .trainingCard {
        grid-template-columns: 1fr;
        max-width: 375px;
    }

    .trainingImg_container {
     display: none;
  }

  h4 {
        font-size: 1.4rem;
    }

    p {
        font-size: 0.8rem;
    }
    }

  </style>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const dropBtns = document.querySelectorAll('.arrowIcon');
  const dropDownMenus = document.querySelectorAll('.dropdown-menu');

  dropBtns.forEach((dropBtn, index) => {
    const dropDownMenu = dropDownMenus[index] as HTMLElement;
    const imageElement = dropBtn as HTMLImageElement; // Cast dropBtn to HTMLImageElement

    imageElement.addEventListener('click', function () {
      if (dropDownMenu.style.display === 'none' || dropDownMenu.style.display === '') {
        dropDownMenu.style.display = 'block';
        imageElement.src = imageElement.getAttribute('data-clicked-src')!; // Change image to clicked state
      } else {
        dropDownMenu.style.display = 'none';
        imageElement.src = imageElement.getAttribute('data-original-src')!; // Change image back to original state
      }
    });
  });
});
</script>
